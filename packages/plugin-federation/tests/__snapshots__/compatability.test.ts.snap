// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`federation compatibility generates expected schema 1`] = `
"directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @link(import: [link__Import], url: String!) on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

type Product
  @key(fields: \\"sku package\\")
  @key(fields: \\"sku variation { id }\\")
{
  id: ID!
  sku: String
  package: String
  dimensions: ProductDimension
  variation: ProductVariation
  notes: [String!] @inaccessible @tag(name: \\"internal\\")
  createdBy: User @provides(fields: \\"totalProductsCreated\\")
}

type ProductDimension
  @shareable
{
  size: String
  weight: Int
  unit: String @inaccessible
}

type ProductVariation {
  id: ID!
}

type Query {
  produce(id: ID!): Product
}

type User
  @key(fields: \\"email\\")
  @extends
{
  email: String! @external
  totalProductsCreated: Int @external
  name: String @override(from: \\"users\\")
}

scalar link__Import"
`;

exports[`federation compatibility generates expected schema 2`] = `
"directive @extends on INTERFACE | OBJECT

directive @external on FIELD_DEFINITION | OBJECT

directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

directive @key(fields: String!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT

directive @link(import: [link__Import], url: String!) on SCHEMA

directive @override(from: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION

type Product {
  createdBy: User
  dimensions: ProductDimension
  id: ID!
  notes: [String!]
  package: String
  sku: String
  variation: ProductVariation
}

type ProductDimension {
  size: String
  unit: String
  weight: Int
}

type ProductVariation {
  id: ID!
}

type Query {
  _entities(representations: [_Any!]!): [_Entity]!
  _service: _Service!
  produce(id: ID!): Product
}

type User {
  email: String!
  name: String
  totalProductsCreated: Int
}

scalar _Any

union _Entity = Product | User

type _Service {
  \\"\\"\\"
  The sdl representing the federated service capabilities. Includes federation directives, removes federation types, and includes rest of full schema after schema directives have been applied
  \\"\\"\\"
  sdl: String
}

scalar link__Import"
`;
